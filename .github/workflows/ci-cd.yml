name: CI/CD Pipeline

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kode
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image ke Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  test-ssh:
    runs-on: self-hosted  # Ubah ke self-hosted karena ini server sendiri
    steps:
      - name: Cek SSH ke Server (Debug Mode)
        uses: fifsky/ssh-action@master
        with:
          host: "192.168.1.100"
          username: "ubuntu"
          pass: "ubuntu123"
          command: |
            echo "‚úÖ Berhasil masuk ke server!"
            whoami
            echo "‚úÖ Cek home directory:"
            ls -lah ~
            echo "‚úÖ Cek OS dan kernel:"
            uname -a
            echo "‚úÖ Cek konektivitas internet:"
            ping -c 4 google.com || echo "üö® Tidak bisa akses internet!"
            echo "‚úÖ Cek status SSH service:"
            systemctl status ssh || echo "üö® SSH service bermasalah!"

  deploy:
    needs: [build, test-ssh]
    runs-on: self-hosted  # Ubah ke self-hosted
    steps:
      - name: Deploy ke Server (Debug Mode)
        uses: fifsky/ssh-action@master
        with:
          host: "192.168.1.100"
          username: "ubuntu"
          pass: "ubuntu123"
          command: |
            echo "‚úÖ Login ke server berhasil"

            echo "‚úÖ Pastikan Docker berjalan"
            sudo systemctl start docker
            sudo systemctl enable docker

            echo "‚úÖ Login ke Docker Hub"
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "‚úÖ Pull image terbaru"
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest

            echo "‚úÖ Hentikan container lama"
            sudo docker stop myapp || echo "‚ö†Ô∏è Container tidak ditemukan, lanjut ke langkah berikutnya."

            echo "‚úÖ Hapus container lama"
            sudo docker rm myapp || echo "‚ö†Ô∏è Container tidak ditemukan, lanjut ke langkah berikutnya."

            echo "‚úÖ Jalankan container baru"
            sudo docker run -d -p 8000:80 --name myapp ${{ secrets.DOCKER_USERNAME }}/myapp:latest
